pipeline {
    agent {
        label 'main'
    }
    parameters {
        string(name: 'REPO_URL', defaultValue: 'https://github.com/your-repo/your-repo.git', description: 'Path to the repo')
        string(name: 'DOCKER_FILE_PATH', defaultValue: "path/to/Dockerfile", description: 'Path to Dockerfile')
        string(name: 'IMAGE_NAME', defaultValue: "crap", description: 'Name of image')
        string(name: 'IMAGE_TAG', defaultValue: "latest", description: 'Version of image')
    }
    environment {
        REGISTRY = "192.168.1.100:5000"
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git url: "${params.REPO_URL}"
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    sh 'ls -la'
                    docker.withRegistry("${REGISTRY}", "docker-registry-creds") {
                        def customImage = docker.build("${params.IMAGE_NAME}:${params.IMAGE_TAG}", "-f ${params.DOCKER_FILE_PATH} .")
                        customImage.push()
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Docker images built and pushed successfully!'
        }
        failure {
            echo 'Build failed. Check logs for errors.'
        }
    }
}
