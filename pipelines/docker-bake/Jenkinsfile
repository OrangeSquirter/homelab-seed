pipeline {
    agent {
        label 'main'
    }
     options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    parameters {
        string(name: 'REPO_URL', defaultValue: 'https://gitlab.com/mjarvi2/nginx-container-testing', description: 'Path to the repo')
        string(name: 'BRANCH', defaultValue: 'master', description: 'Branch to build')
        string(name: 'DOCKER_BAKE_FILE', defaultValue: "docker-bake.hcl", description: 'Path to docker-bake.hcl')
        string(name: 'TAG', defaultValue: "latest", description: 'What to tag the build as')
    }
    environment {
        REGISTRY = "registry.pizzasec.com"
    }
    stages {
        stage('Build and Push Docker Images') {
            agent {
                dockerfile {
                    filename 'pipelines/docker-bake/Dockerfile'
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-registry-creds', usernameVariable: 'REGISTRY_USERNAME', passwordVariable: 'REGISTRY_PASSWORD')]) {
                        sh """
                        /app/build.sh \
                            ${REGISTRY} \
                            ${params.REPO_URL} \
                            ${params.DOCKER_BAKE_FILE} \
                            ${params.BRANCH} \
                            ${REGISTRY_USERNAME} \
                            '${REGISTRY_PASSWORD}' \
                            ${params.TAG}
                        """
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Docker images built and pushed successfully!'
        }
        failure {
            echo 'Build failed. Check logs for errors.'
        }
    }
}
