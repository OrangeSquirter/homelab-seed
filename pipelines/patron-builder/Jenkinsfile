pipeline {
    agent {
        node {
            label 'patron'
        }
    }
     options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    parameters {
        string(name: 'TEMPLATE', defaultValue: 'ubuntu-24', description: 'Base OS for Patron')
        string(name: 'BRANCH', defaultValue: 'dev', description: 'Branch of the patron environment')
        choice(name: 'NETWORK', choices: ['patron', 'vmbr0', 'vmbr1'], description: 'Network to place the VM on')
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    sh "ssh-keyscan github.com >> ~/.ssh/known_hosts"                   
                    checkout([$class: 'GitSCM',
                        branches: [[name: "*/${params.BRANCH}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        userRemoteConfigs: [[
                            url: 'git@github.com:PatronC2/Patron.git',
                            credentialsId: 'ssh-key'
                        ]]
                    ])
                }
            }
        }
        stage('Run Ansible Playbooks') {
            steps {
                script {
                    sh 'ls -lah'
                }
            }
        }
    }
}
