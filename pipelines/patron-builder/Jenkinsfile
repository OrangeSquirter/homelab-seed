pipeline {
    agent {
        node {
            label 'patron'
        }
    }
    parameters {
        string(name: 'TEMPLATE', defaultValue: 'ubuntu-24', description: 'Base OS for Patron')
        string(name: 'BRANCH', defaultValue: 'dev', description: 'Branch of the patron environment')
        choice(name: 'NETWORK', choices: ['patron', 'vmbr0', 'vmbr1'], description: 'Network to place the VM on')
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: "*/master"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        userRemoteConfigs: [[url: 'https://github.com/OrangeSquirter/patron-devtools.git']]
                    ])
                    
                    checkout([$class: 'GitSCM',
                        branches: [[name: "*/${params.BRANCH}"]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        userRemoteConfigs: [[url: 'https://github.com/PatronC2/Patron.git']]
                    ])
                }
            }
        }
        stage('Run Ansible Playbooks') {
            agent {
                dockerfile {
                    filename 'patron-devtools/ansible/Dockerfile'
                }
            }
            steps {
                script {
                    DOCKER_IMAGE.inside {
                        sh '''
                        ls -la /app
                        '''
                    }
                }
            }
        }
    }
}
